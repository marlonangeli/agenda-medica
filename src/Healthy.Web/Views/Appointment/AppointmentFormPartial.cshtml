@using Healthy.Domain.Enums
@using Healthy.Web.Helpers
@using Microsoft.AspNetCore.Mvc.Rendering
@model Appointment

@{
    string action = ViewBag.Action ?? "Create";
    string treatment = action == "Create" ? "Cadastrar" : "Editar";
}

<div class="flex justify-content-center align-content-center">

    <h2>@treatment Consulta</h2>

    @using (Html.BeginForm(action, "Appointment", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr/>
            
            @Html.ValidationSummary("", new { @class = "text-danger" })
            
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { @class = "form-control datepicker", @data_val = "true", @data_val_validationappointmentdate = "Data de consulta inválida" })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DoctorId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DoctorId, ViewBag.Doctors as SelectList, "-- Selecione um médico --", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.DoctorId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PatientId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.PatientId, ViewBag.Patients as SelectList, "-- Selecione um paciente --", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Status, EnumHelper.GetSelectList(typeof(AppointmentStatus)), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mt-2">
                <div class="col-md-offset-3 col-md-9">
                    <button type="submit" class="btn btn-success">@treatment</button>
                </div>
            </div>
        </div>
    }
</div>

@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
